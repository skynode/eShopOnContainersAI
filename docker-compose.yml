version: '3.4'

services:
  sql.data:
    image: microsoft/mssql-server-linux:2017-latest
    volumes:
      - ./mssql:/var/opt/bulk

  nosql.data:
    image: mongo

  basket.data:
    image: redis:alpine
      
  rabbitmq:
    image: rabbitmq:3-management-alpine

  identity.api:
    image: eshopai/identity.api:${TAG:-latest}
    build:
      context: .
      dockerfile: src/Services/Identity/Identity.API/Dockerfile    
      args:
        configuration: "${configuration}"
    depends_on:
      - sql.data

  basket.api:
    image: eshopai/basket.api:${TAG:-latest}
    build:
      context: .
      dockerfile: src/Services/Basket/Basket.API/Dockerfile    
      args:
        configuration: "${configuration}"
    depends_on:
      - basket.data
      - identity.api
      - rabbitmq

  ai.salesforecasting.mlnet.api:
    image: eshopai/ai.salesforecasting.mlnet.api:${TAG:-latest}
    build:
      context: .
      dockerfile: src/Services/AI.SalesForecasting/AI.SalesForecasting.MLNet.API/Dockerfile    
      args:
        configuration: "${configuration}"

  ai.productrecommender.azureml.api:
    image: eshopai/ai.productrecommender.azureml.api:${TAG:-latest}
    build:
      context: .
      dockerfile: src/Services/AI.ProductRecommender/AI.ProductRecommender.AzureML.API/Dockerfile    
      args:
        configuration: "${configuration}"

  ai.productsearchimagebased.tensorflow.api:
    image: eshopai/ai.productsearchimagebased.tensorflow.api:${TAG:-latest}
    build:
      context: .
      dockerfile: src/Services/AI.ProductSearchImageBased/AI.ProductSearchImageBased.TensorFlow.API/Dockerfile    
      args:
        configuration: "${configuration}"

  ai.productsearchimagebased.azurecognitiveservices.api:
    image: eshopai/ai.productsearchimagebased.azurecognitiveservices.api:${TAG:-latest}
    build:
      context: .
      dockerfile: src/Services/AI.ProductSearchImageBased/AI.ProductSearchImageBased.AzureCognitiveServices.API/Dockerfile    
      args:
        configuration: "${configuration}"

  catalog.api:
    image: eshopai/catalog.api:${TAG:-latest}
    build:
      context: .
      dockerfile: src/Services/Catalog/Catalog.API/Dockerfile
      args:
        configuration: "${configuration}"
    depends_on:
      - sql.data
      - nosql.data
      - rabbitmq

  ordering.api:
    image: eshopai/ordering.api:${TAG:-latest}
    build:
      context: .
      dockerfile: src/Services/Ordering/Ordering.API/Dockerfile    
      args:
        configuration: "${configuration}"
    depends_on:
      - sql.data
      - rabbitmq

  ordering.backgroundtasks:
    image: eshopai/ordering.backgroundtasks:${TAG:-latest}
    build:
      context: .
      dockerfile: src/Services/Ordering/Ordering.BackgroundTasks/Dockerfile    
      args:
        configuration: "${configuration}"
    depends_on:
      - sql.data
      - rabbitmq

  marketing.api:
    image: eshopai/marketing.api:${TAG:-latest}
    build:
      context: .
      dockerfile: src/Services/Marketing/Marketing.API/Dockerfile    
    depends_on:
      - sql.data
      - nosql.data
      - identity.api
      - rabbitmq

  payment.api:
    image: eshopai/payment.api:${TAG:-latest}
    build:
      context: .
      dockerfile: src/Services/Payment/Payment.API/Dockerfile
    depends_on:
      - rabbitmq    
    
  locations.api:
    image: eshopai/locations.api:${TAG:-latest}
    build:
      context: .
      dockerfile: src/Services/Location/Locations.API/Dockerfile
    depends_on:
      - nosql.data
      - rabbitmq

  mobileshoppingapigw:
    image: eshopai/ocelotapigw:${TAG:-latest}
    build:
      context: .
      dockerfile: src/ApiGateways/ApiGw-Base/Dockerfile
    depends_on:
      - nosql.data
      - sql.data
      - identity.api
      - rabbitmq
      - ordering.api
      - marketing.api
      - catalog.api
      - basket.api
 
  mobilemarketingapigw:
    image: eshopai/ocelotapigw:${TAG:-latest}
    build:
      context: .
      dockerfile: src/ApiGateways/ApiGw-Base/Dockerfile
    depends_on:
      - nosql.data
      - sql.data
      - identity.api
      - rabbitmq
      - ordering.api
      - marketing.api
      - catalog.api
      - basket.api
 
  webshoppingapigw:
    image: eshopai/ocelotapigw:${TAG:-latest}
    build:
      context: .
      dockerfile: src/ApiGateways/ApiGw-Base/Dockerfile
    depends_on:
      - nosql.data
      - sql.data
      - identity.api
      - rabbitmq
      - ordering.api
      - marketing.api
      - catalog.api
      - basket.api

  webmarketingapigw:
    image: eshopai/ocelotapigw:${TAG:-latest}
    build:
      context: .
      dockerfile: src/ApiGateways/ApiGw-Base/Dockerfile
    depends_on:
      - nosql.data
      - sql.data
      - identity.api
      - rabbitmq
      - ordering.api
      - marketing.api
      - catalog.api
      - basket.api

  mobileshoppingagg:
    image: eshopai/mobileshoppingagg:${TAG:-latest}
    build:
      context: .
      dockerfile: src/ApiGateways/Mobile.Bff.Shopping/aggregator/Dockerfile
    depends_on:
      - nosql.data
      - sql.data
      - identity.api
      - rabbitmq
      - ordering.api
      - marketing.api
      - catalog.api
      - basket.api

  webshoppingagg:
    image: eshopai/webshoppingagg:${TAG:-latest}
    build:
      context: .
      dockerfile: src/ApiGateways/Web.Bff.Shopping/aggregator/Dockerfile
    depends_on:
      - nosql.data
      - sql.data
      - identity.api
      - rabbitmq
      - ordering.api
      - marketing.api
      - catalog.api
      - basket.api

  ordering.signalrhub:
    image: eshopai/ordering.signalrhub:${TAG:-latest}
    build:
      context: .
      dockerfile: src/Services/Ordering/Ordering.SignalrHub/Dockerfile
    depends_on:
      - nosql.data
      - sql.data
      - identity.api
      - rabbitmq
      - ordering.api
      - marketing.api
      - catalog.api
      - basket.api

  webaiapigw:
    image: eshopai/ocelotapigw:${TAG:-latest}
    build:
      context: .
      dockerfile: src/ApiGateways/ApiGw-Base/Dockerfile
    depends_on:
      - ai.salesforecasting.mlnet.api
      - catalog.api
      - ordering.api
      - ai.productrecommender.azureml.api
      - ai.productsearchimagebased.tensorflow.api
      - ai.productsearchimagebased.azurecognitiveservices.api

  bot.api:
    image: eshopai/bot.api:${TAG:-latest}
    build:
      context: .
      dockerfile: src/Bots/Bot.Core.API/Dockerfile
      args:
        configuration: "${configuration}"
    depends_on:
      - webshoppingapigw
      - webaiapigw

  webraz:
    image: eshopai/webraz:${TAG:-latest}
    build:
      context: .
      dockerfile: src/Web/WebDashboardRazor/Dockerfile    
      args:
        configuration: "${configuration}"
    depends_on:
      - webshoppingapigw
      - webaiapigw

  webmvc:
    image: eshopai/webmvc:${TAG:-latest}
    build:
      context: .
      dockerfile: src/Web/WebMVC/Dockerfile    
      args:
        configuration: "${configuration}"
    depends_on:
      - webshoppingagg
      - webshoppingapigw
      - webmarketingapigw
      - webaiapigw

