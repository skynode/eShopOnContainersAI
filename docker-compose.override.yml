version: '3.4'

# The default docker-compose.override file can use the "localhost" as the external name for testing web apps within the same dev machine. 
# The ESHOP_EXTERNAL_DNS_NAME_OR_IP environment variable is taken, by default, from the ".env" file defined like: 
#     ESHOP_EXTERNAL_DNS_NAME_OR_IP: localhost
# but values present in the environment vars at runtime will always override those defined inside the .env file
# An external IP or DNS name has to be used (instead localhost and the 10.0.75.1 IP) when testing the Web apps and the Xamarin apps from remote machines/devices using the same WiFi, for instance.

services:
      
  basket.api:
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      ASPNETCORE_URLS: http://0.0.0.0:80
      ConnectionString: ${ESHOP_AZURE_REDIS_BASKET_DB:-basket.data}
      identityUrl: http://identity.api              #Local: You need to open your local dev-machine firewall at range 5100-5110.
      IdentityUrlExternal: http://${ESHOP_EXTERNAL_DNS_NAME_OR_IP}:5105
      EventBusConnection: ${ESHOP_AZURE_SERVICE_BUS:-rabbitmq}
      EventBusUserName: ${ESHOP_SERVICE_BUS_USERNAME}
      EventBusPassword: ${ESHOP_SERVICE_BUS_PASSWORD}      
      AzureServiceBusEnabled: "False"
      ApplicationInsights__InstrumentationKey: ${INSTRUMENTATION_KEY}
      OrchestratorType: ${ORCHESTRATOR_TYPE}
      UseLoadTest: ${USE_LOADTEST:-False}
    ports:
      - "51032:22"
      - "5103:80"   # Important: In a production environment your should remove the external port (5103) kept here for microservice debugging purposes. 
                    # The API Gateway redirects and access through the internal port (80). 

  ai.salesforecasting.mlnet.api:
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      ASPNETCORE_URLS: http://0.0.0.0:80
      ApplicationInsights__InstrumentationKey: ${INSTRUMENTATION_KEY}
      OrchestratorType: ${ORCHESTRATOR_TYPE}
    ports:
      - "5134:80"
      - "51342:22"


  ai.productrecommender.azureml.api:
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      ASPNETCORE_URLS: http://0.0.0.0:80
      AzureMachineLearning__RecommendationAPIKey: ${ESHOPAI_AML_RECOM_KEY}
      AzureMachineLearning__RecommendationUri: ${ESHOPAI_AML_RECOM_URI}
      ApplicationInsights__InstrumentationKey: ${INSTRUMENTATION_KEY}
      OrchestratorType: ${ORCHESTRATOR_TYPE}
    ports:
      - "5128:80"
      - "51282:22"

  ai.productsearchimagebased.tensorflow.api:
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      ASPNETCORE_URLS: http://0.0.0.0:80
      TensorFlowPredictionDefaultModel: ${ESHOPAI_PRODUCTSEARCHIMAGEBASED_APPROACH}
      ApplicationInsights__InstrumentationKey: ${INSTRUMENTATION_KEY}
      OrchestratorType: ${ORCHESTRATOR_TYPE}
    ports:
      - "5126:80"
      - "51262:22"

  ai.productsearchimagebased.azurecognitiveservices.api:
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      ASPNETCORE_URLS: http://0.0.0.0:80
      ComputerVision__VisionAPIKey: ${ESHOPAI_CS_VIS_KEY}
      ComputerVision__VisionUri: ${ESHOPAI_CS_VIS_URI}
      CustomVision__PredictionKey: ${ESHOPAI_CV_PRED_KEY}
      CustomVision__ProjectId: ${ESHOPAI_CV_PROJECT_ID}
      CognitiveServicesPredictionDefaultModel: ${ESHOPAI_PRODUCTSEARCHIMAGEBASED_APPROACH}
      ApplicationInsights__InstrumentationKey: ${INSTRUMENTATION_KEY}
      OrchestratorType: ${ORCHESTRATOR_TYPE}
    ports:
      - "5127:80"
      - "51272:22"

  catalog.api:
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      ASPNETCORE_URLS: http://0.0.0.0:80
      ConnectionString: "${ESHOP_AZURE_CATALOG_DB:-Server=sql.data;Database=Microsoft.eShopOnContainers.Services.CatalogDb;User Id=sa;Password=Pass@word}"
      PicBaseUrl: "${ESHOP_AZURE_STORAGE_CATALOG_URL:-http://localhost:5202/api/v1/c/catalog/items/[0]/pic/}"   #Local: You need to open your local dev-machine firewall at range 5100-5110.  
      EventBusConnection: ${ESHOP_AZURE_SERVICE_BUS:-rabbitmq}
      EventBusUserName: ${ESHOP_SERVICE_BUS_USERNAME}
      EventBusPassword: ${ESHOP_SERVICE_BUS_PASSWORD}         
      AzureStorageAccountName: ${ESHOP_AZURE_STORAGE_CATALOG_NAME}
      AzureStorageAccountKey: ${ESHOP_AZURE_STORAGE_CATALOG_KEY}
      UseCustomizationData: "True"
      UseCustomizationDataAI: "True"
      AzureServiceBusEnabled: "False"
      AzureStorageEnabled: "False"
      ApplicationInsights__InstrumentationKey: ${INSTRUMENTATION_KEY}
      MongoConnectionString: ${ESHOP_AZURE_COSMOSDB:-mongodb://nosql.data}
      MongoDatabase: "CatalogTagDb"
      OrchestratorType: ${ORCHESTRATOR_TYPE}
    ports:
      - "51012:22"
      - "5101:80"   # Important: In a production environment your should remove the external port (5101) kept here for microservice debugging purposes. 
                    # The API Gateway redirects and access through the internal port (80).

  identity.api:
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      ASPNETCORE_URLS: http://0.0.0.0:80
      # BotClient: https://your-subdomain.ngrok.io
      SpaClient: http://${ESHOP_EXTERNAL_DNS_NAME_OR_IP}:5104
      XamarinCallback: http://${ESHOP_PROD_EXTERNAL_DNS_NAME_OR_IP}:5105/xamarincallback      #localhost do not work for UWP login, so we have to use "external" IP always
      ConnectionString: "${ESHOP_AZURE_IDENTITY_DB:-Server=sql.data;Database=Microsoft.eShopOnContainers.Service.IdentityDb;User Id=sa;Password=Pass@word}"
      MvcClient: http://${ESHOP_EXTERNAL_DNS_NAME_OR_IP}:5100              #Local: You need to open your local dev-machine firewall at range 5100-5110. 
      LocationApiClient: http://${ESHOP_EXTERNAL_DNS_NAME_OR_IP}:5109
      MarketingApiClient: http://${ESHOP_EXTERNAL_DNS_NAME_OR_IP}:5110
      BasketApiClient: http://${ESHOP_EXTERNAL_DNS_NAME_OR_IP}:5103
      OrderingApiClient: http://${ESHOP_EXTERNAL_DNS_NAME_OR_IP}:5102
      MobileShoppingAggClient: http://${ESHOP_EXTERNAL_DNS_NAME_OR_IP}:5120
      WebShoppingAggClient: http://${ESHOP_EXTERNAL_DNS_NAME_OR_IP}:5121
      UseCustomizationData: "True"
      UseCustomizationDataAI: "True"
      ApplicationInsights__InstrumentationKey: ${INSTRUMENTATION_KEY}
      OrchestratorType: ${ORCHESTRATOR_TYPE}
    ports:
      - "5105:80"
      - "51052:22"

  ordering.api:
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      ASPNETCORE_URLS: http://0.0.0.0:80
      ConnectionString: "${ESHOP_AZURE_ORDERING_DB:-Server=sql.data;Database=Microsoft.eShopOnContainers.Services.OrderingDb;User Id=sa;Password=Pass@word}"
      identityUrl: http://identity.api              #Local: You need to open your local dev-machine firewall at range 5100-5110.
      IdentityUrlExternal: http://${ESHOP_EXTERNAL_DNS_NAME_OR_IP}:5105
      EventBusConnection: ${ESHOP_AZURE_SERVICE_BUS:-rabbitmq}
      EventBusUserName: ${ESHOP_SERVICE_BUS_USERNAME}
      EventBusPassword: ${ESHOP_SERVICE_BUS_PASSWORD}          
      UseCustomizationData: "True"
      UseCustomizationDataAI: "True"
      AzureServiceBusEnabled: "False"
      CheckUpdateTime: 30000
      ApplicationInsights__InstrumentationKey: ${INSTRUMENTATION_KEY}
      OrchestratorType: ${ORCHESTRATOR_TYPE}
      UseLoadTest: ${USE_LOADTEST:-False}
    ports:
      - "51022:22"
      - "5102:80"   # Important: In a production environment your should remove the external port (5102) kept here for microservice debugging purposes. 
                    # The API Gateway redirects and access through the internal port (80).


  ordering.backgroundtasks:
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      ASPNETCORE_URLS: http://0.0.0.0:80
      ConnectionString: "${ESHOP_AZURE_ORDERING_DB:-Server=sql.data;Database=Microsoft.eShopOnContainers.Services.OrderingDb;User Id=sa;Password=Pass@word}"
      EventBusConnection: ${ESHOP_AZURE_SERVICE_BUS:-rabbitmq}
      EventBusUserName: ${ESHOP_SERVICE_BUS_USERNAME}
      EventBusPassword: ${ESHOP_SERVICE_BUS_PASSWORD}          
      UseCustomizationData: "True"
      AzureServiceBusEnabled: "False"
      CheckUpdateTime: 30000
      GracePeriodTime: 1
      ApplicationInsights__InstrumentationKey: ${INSTRUMENTATION_KEY}
      OrchestratorType: ${ORCHESTRATOR_TYPE}
      UseLoadTest: ${USE_LOADTEST:-False}
    ports:
      - "5111:80"

  marketing.api:
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      ASPNETCORE_URLS: http://0.0.0.0:80
      ConnectionString: "${ESHOP_AZURE_MARKETING_DB:-Server=sql.data;Database=Microsoft.eShopOnContainers.Services.MarketingDb;User Id=sa;Password=Pass@word}"
      MongoConnectionString: ${ESHOP_AZURE_COSMOSDB:-mongodb://nosql.data}
      MongoDatabase: "MarketingDb"
      EventBusConnection: ${ESHOP_AZURE_SERVICE_BUS:-rabbitmq}
      EventBusUserName: ${ESHOP_SERVICE_BUS_USERNAME}
      EventBusPassword: ${ESHOP_SERVICE_BUS_PASSWORD}          
      identityUrl: http://identity.api              #Local: You need to open your local dev-machine firewall at range 5100-5110.
      IdentityUrlExternal: http://${ESHOP_EXTERNAL_DNS_NAME_OR_IP}:5105
      CampaignDetailFunctionUri: ${ESHOP_AZUREFUNC_CAMPAIGN_DETAILS_URI}
      PicBaseUrl: ${ESHOP_AZURE_STORAGE_MARKETING_URL:-http://localhost:5110/api/v1/campaigns/[0]/pic/}
      AzureStorageAccountName: ${ESHOP_AZURE_STORAGE_MARKETING_NAME}
      AzureStorageAccountKey: ${ESHOP_AZURE_STORAGE_MARKETING_KEY}
      AzureServiceBusEnabled: "False"
      AzureStorageEnabled: "False"
      ApplicationInsights__InstrumentationKey: ${INSTRUMENTATION_KEY}
      OrchestratorType: ${ORCHESTRATOR_TYPE}
      UseLoadTest: ${USE_LOADTEST:-False}
    ports:
      - "5110:80"   # Important: In a production environment your should remove the external port (5110) kept here for microservice debugging purposes. 
                    # The API Gateway redirects and access through the internal port (80).

  webraz:
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      ASPNETCORE_URLS: http://0.0.0.0:80
      ArtificialIntelligenceUrl: http://${ESHOP_EXTERNAL_DNS_NAME_OR_IP}:5204
      WebShoppingUrlExternal: http://${ESHOP_EXTERNAL_DNS_NAME_OR_IP}:5202
      WebShoppingUrl: http://webshoppingapigw
      ApplicationInsights__InstrumentationKey: ${INSTRUMENTATION_KEY}
      OrchestratorType: ${ORCHESTRATOR_TYPE}
    ports:
      - "5300:80"
      - "53002:22"

  bot.api:
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      ASPNETCORE_URLS: http://0.0.0.0:80
      PurchaseUrl: http://webshoppingapigw
      ArtificialIntelligenceUrl: http://webaiapigw
      MicrosoftAppId: ${ESHOPAI_BOT_APP_ID}
      MicrosoftAppPassword: ${ESHOPAI_BOT_APP_PASSWORD}
      Luis__ModelId: ${ESHOPAI_BOT_LUIS_MODEL_ID}
      Luis__SubscriptionKey: ${ESHOPAI_BOT_LUIS_SUBSCRIPTION_KEY}
      Luis__ServiceUri: ${ESHOPAI_BOT_LUIS_SERVICE_URI}
      ProductSearchImageBased__Approach: ${ESHOPAI_PRODUCTSEARCHIMAGEBASED_APPROACH}
      ApplicationInsights__InstrumentationKey: ${INSTRUMENTATION_KEY}
    ports:
      - "5135:80"
      - "51352:22"

  webmvc:
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      ASPNETCORE_URLS: http://0.0.0.0:80
      PurchaseUrl: http://webshoppingapigw
      IdentityUrl: http://10.0.75.1:5105  # Local Mac: Use http://docker.for.mac.localhost:5105 || Local Windows:  Use 10.0.75.1 in a "Docker for Windows" environment, if using "localhost" from browser. || #Remote access: Use ${ESHOP_EXTERNAL_DNS_NAME_OR_IP} if using external IP or DNS name from browser.
      MarketingUrl: http://webmarketingapigw                                                    
      CatalogUrlHC: http://catalog.api/hc
      OrderingUrlHC: http://ordering.api/hc
      IdentityUrlHC: http://identity.api/hc     #Local: Use ${ESHOP_PROD_EXTERNAL_DNS_NAME_OR_IP}, if using external IP or DNS name from browser.          
      BasketUrlHC: http://basket.api/hc
      MarketingUrlHC: http://marketing.api/hc
      PaymentUrlHC: http://payment.api/hc
      ArtificialIntelligenceUrl: http://webaiapigw
      ProductSearchImageBased__CognitiveUrl: ${ESHOPAI_PRODUCTSEARCHIMAGEBASED_COGNITIVE_MICROSERVICE_URI}
      ProductSearchImageBased__TensorFlowUrl: ${ESHOPAI_PRODUCTSEARCHIMAGEBASED_TENSORFLOW_MICROSERVICE_URI}
      ProductSearchImageBased__Approach: ${ESHOPAI_PRODUCTSEARCHIMAGEBASED_APPROACH}
      SignalrHubUrl: http://${ESHOP_EXTERNAL_DNS_NAME_OR_IP}:5202
      UseCustomizationData: "True"
      ApplicationInsights__InstrumentationKey: ${INSTRUMENTATION_KEY}
      OrchestratorType: ${ORCHESTRATOR_TYPE}
      UseLoadTest: ${USE_LOADTEST:-False}
    ports:
      - "5100:80"
      - "51002:22"

  payment.api:
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      ASPNETCORE_URLS: http://0.0.0.0:80
      EventBusConnection: ${ESHOP_AZURE_SERVICE_BUS:-rabbitmq}
      EventBusUserName: ${ESHOP_SERVICE_BUS_USERNAME}
      EventBusPassword: ${ESHOP_SERVICE_BUS_PASSWORD}          
      AzureServiceBusEnabled: "False"
      ApplicationInsights__InstrumentationKey: ${INSTRUMENTATION_KEY}
      OrchestratorType: ${ORCHESTRATOR_TYPE}
    ports:
      - "5108:80"   # Important: In a production environment your should remove the external port (5108) kept here for microservice debugging purposes. 
                    # The API Gateway redirects and access through the internal port (80).

  locations.api:
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      ASPNETCORE_URLS: http://0.0.0.0:80
      ConnectionString: ${ESHOP_AZURE_COSMOSDB:-mongodb://nosql.data}
      Database: "LocationsDb"
      identityUrl: http://identity.api              #Local: You need to open your local dev-machine firewall at range 5100-5110. 
      IdentityUrlExternal: http://${ESHOP_EXTERNAL_DNS_NAME_OR_IP}:5105
      EventBusConnection: ${ESHOP_AZURE_SERVICE_BUS:-rabbitmq}
      EventBusUserName: ${ESHOP_SERVICE_BUS_USERNAME}
      EventBusPassword: ${ESHOP_SERVICE_BUS_PASSWORD}          
      AzureServiceBusEnabled: "False"
      ApplicationInsights__InstrumentationKey: ${INSTRUMENTATION_KEY}
      OrchestratorType: ${ORCHESTRATOR_TYPE}
      UseLoadTest: ${USE_LOADTEST:-False}
    ports:
      - "5109:80"   # Important: In a production environment your should remove the external port (5109) kept here for microservice debugging purposes. 
                    # The API Gateway redirects and access through the internal port (80).
   

  sql.data:
    environment:
      SA_PASSWORD: "Pass@word"
      ACCEPT_EULA: "Y"
    ports:
      - "5433:1433"    # Important: In a production environment your should remove the external port

  nosql.data:
    ports:
      - "27017:27017"  # Important: In a production environment your should remove the external port

  basket.data:
    ports:
      - "6379:6379"    # Important: In a production environment your should remove the external port
      
  rabbitmq:
    ports:
      - "15672:15672"  # Important: In a production environment your should remove the external port
      - "5672:5672"    # Important: In a production environment your should remove the external port

  mobileshoppingapigw:
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      IdentityUrl: http://identity.api              #Local: You need to open your local dev-machine firewall at range 5100-5110.
    ports:
      - "5200:80"   
    volumes:
      - ./src/ApiGateways/Mobile.Bff.Shopping/apigw:${ESHOP_OCELOT_VOLUME_SPEC:-/app/configuration}

  mobilemarketingapigw:
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      IdentityUrl: http://identity.api              #Local: You need to open your local dev-machine firewall at range 5100-5110.
    ports:
      - "5201:80"   
    volumes:
      - ./src/ApiGateways/Mobile.Bff.Marketing/apigw:${ESHOP_OCELOT_VOLUME_SPEC:-/app/configuration}

  webshoppingapigw:
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      IdentityUrl: http://identity.api              #Local: You need to open your local dev-machine firewall at range 5100-5110.
    ports:
      - "5202:80"   
    volumes:
      - ./src/ApiGateways/Web.Bff.Shopping/apigw:${ESHOP_OCELOT_VOLUME_SPEC:-/app/configuration}

  webmarketingapigw:
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      IdentityUrl: http://identity.api              #Local: You need to open your local dev-machine firewall at range 5100-5110.
    ports:
      - "5203:80"   
    volumes:
      - ./src/ApiGateways/Web.Bff.Marketing/apigw:${ESHOP_OCELOT_VOLUME_SPEC:-/app/configuration}

  mobileshoppingagg:
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      urls__basket: http://basket.api
      urls__catalog: http://catalog.api
      urls__orders: http://ordering.api
      urls__identity: http://identity.api              #Local: You need to open your local dev-machine firewall at range 5100-5110.
    ports:
      - "5120:80"   # Important: In a production environment your should remove the external port (5120) kept here for microservice debugging purposes. 
                    # The API Gateway redirects and access through the internal port (80).

  webshoppingagg:
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      urls__basket: http://basket.api
      urls__catalog: http://catalog.api
      urls__orders: http://ordering.api
      urls__identity: http://identity.api              #Local: You need to open your local dev-machine firewall at range 5100-5110.
    ports:
      - "5121:80"   # Important: In a production environment your should remove the external port (5121) kept here for microservice debugging purposes. 
                    # The API Gateway redirects and access through the internal port (80).

  webaiapigw:
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      IdentityUrl: http://identity.api              #Local: You need to open your local dev-machine firewall at range 5100-5110.
    ports:
      - "5204:80"   
    volumes:
      - ./src/ApiGateways/Web.Bff.AI/apigw:/app/configuration

  ordering.signalrhub:
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      ASPNETCORE_URLS: http://0.0.0.0:80
      EventBusConnection: ${ESHOP_AZURE_SERVICE_BUS:-rabbitmq}
      EventBusUserName: ${ESHOP_SERVICE_BUS_USERNAME}
      EventBusPassword: ${ESHOP_SERVICE_BUS_PASSWORD}          
      AzureServiceBusEnabled: "False"
      ApplicationInsights__InstrumentationKey: ${INSTRUMENTATION_KEY}
      OrchestratorType: ${ORCHESTRATOR_TYPE}
      identityUrl: http://identity.api              #Local: You need to open your local dev-machine firewall at range 5100-5110.
    ports:
      - "5112:80"
